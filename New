1. import java.util.ArrayList;
2. import java.util.Scanner;
3. class BankAccount {
4. private String accountNumber;
5. private String accountHolderName;
6. private double balance;
7. public BankAccount(String accountNumber, String accountHolderName, double initialBalance) {
8. this.accountNumber = accountNumber;
9. this.accountHolderName = accountHolderName;
10. this.balance = initialBalance;
11. }
12. public String getAccountNumber() {
13. return accountNumber;
14. }
15. public String getAccountHolderName() {
16. return accountHolderName;
17. }
18. public double getBalance() {
19. return balance;
20. }
21. public void deposit(double amount) {
22. if (amount > 0) {
23. balance += amount;
24. System.out.println("Successfully deposited $" + amount);
25. } else {
26. System.out.println("Invalid deposit amount");
27. }
28. }
29. public void withdraw(double amount) {
30. if (amount > 0 && amount <= balance) {
31. balance -= amount;
32. System.out.println("Successfully withdrew $" + amount);
33. } else {
34. System.out.println("Invalid withdrawal amount or insufficient funds");
35. }
36. }
37. }
38. class Bank {
39. private ArrayList<BankAccount> accounts;
40. private Scanner scanner;
41. public Bank() {
42. accounts = new ArrayList<>();
43. scanner = new Scanner(System.in);
44. }
45. public void createAccount() {
46. System.out.print("Enter account number: ");
47. String accountNumber = scanner.nextLine();
48. for (BankAccount account : accounts) {
49. if (account.getAccountNumber().equals(accountNumber)) {
a. System.out.println("Account number already exists!");
b. return;
50. }
51. }
52. System.out.print("Enter account holder name: ");
53. String accountHolderName = scanner.nextLine();
54. System.out.print("Enter initial balance: ");
55. double initialBalance = scanner.nextDouble();
56. scanner.nextLine();
57. if (initialBalance >= 0) {
58. BankAccount account = new BankAccount(accountNumber, accountHolderName, initialBalance);
59. accounts.add(account);
60. System.out.println("Account created successfully!");
61. } else {
62. System.out.println("Invalid initial balance");
63. }
64. }
65. public BankAccount findAccount(String accountNumber) {
66. for (BankAccount account : accounts) {
67. if (account.getAccountNumber().equals(accountNumber)) {
a. return account;
68. }
69. }
70. return null;
71. }
72. public void deposit() {
73. System.out.print("Enter account number: ");
74. String accountNumber = scanner.nextLine();
75. BankAccount account = findAccount(accountNumber);
76. if (account != null) {
77. System.out.print("Enter deposit amount: ");
78. double amount = scanner.nextDouble();
79. scanner.nextLine();
80. account.deposit(amount);
81. } else {
82. System.out.println("Account not found!");
83. }
84. }
85. public void withdraw() {
86. System.out.print("Enter account number: ");
87. String accountNumber = scanner.nextLine();
88. BankAccount account = findAccount(accountNumber);
89. if (account != null) {
90. System.out.print("Enter withdrawal amount: ");
91. double amount = scanner.nextDouble();
92. scanner.nextLine();
93. account.withdraw(amount);
94. } else {
95. System.out.println("Account not found!");
96. }
97. }
98. public void checkBalance() {
99. System.out.print("Enter account number: ");
